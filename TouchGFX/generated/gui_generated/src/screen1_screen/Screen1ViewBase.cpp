/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFromRGB(46, 46, 46));

    textArea1.setPosition(40, 68, 400, 34);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1Buffer[0] = 0;
    textArea1.setWildcard(textArea1Buffer);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));

    buttonSend.setXY(70, 124);
    buttonSend.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonSend.setLabelText(touchgfx::TypedText(T_SINGLEUSEID7));
    buttonSend.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonSend.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonSend.setAction(buttonCallback);

    buttonSend_2.setXY(240, 124);
    buttonSend_2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonSend_2.setLabelText(touchgfx::TypedText(T_SINGLEUSEID8));
    buttonSend_2.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonSend_2.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonSend_2.setAction(buttonCallback);

    add(__background);
    add(box1);
    add(textArea1);
    add(buttonSend);
    add(buttonSend_2);
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonSend)
    {
        //Interaction1
        //When buttonSend clicked call virtual function
        //Call buttonSendClicked
        buttonSendClicked();
    }
    else if (&src == &buttonSend_2)
    {
        //Interaction2
        //When buttonSend_2 clicked call virtual function
        //Call buttonSend2Clicked
        buttonSend2Clicked();
    }
}
